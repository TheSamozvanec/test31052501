"use strict";
//test file
console.log("hello!");
// объект созданный при помощи интерфейса
// любое несоотвеетствие типов данных объявленных в интерфейсе приведет к ошибке
// отсутствие обязательных полей (ключей) также приведет к ошибке
let user01 = {
    name: 'Ivan',
    login: 'Vantuz',
    level: 'junior',
    target: 'GAME',
    age: 15
};
// просто объект. После создания объекта в TS невозможно присвоить объявленному имени
// объект с иной структурой данных, включая типы и состав.
let obj = { a: 10, b: 20, c: 15 };
// obj={a:'a',b:0,c:0};// - данная операция приведет к ошибке, в ключе a не должно быть строки
// obj={a:0,b:0};// - данная операция приведет к ошибке, отсутствует ключ "с"
// obj.a='a';// - здесь тоже ошибка при попытке изменения данных в ключе "a", 
// в ключь а было переано значение number и тип данных определен именно number
obj.b = 35; // допустимое действие
let i; // данная запись необходима для использования i в качестве индекса 
for (i in user01) {
    console.log(i + ':' + user01[i]);
}
for (let n in user01) {
    console.log(n);
    //console.log(user01[n]); // в данном случае это будет ошибка, так как тип "n" не объявлен ключом "user01"
}
let fn1 = function (x, y) {
    let str = String(x * y);
    let res = 0;
    for (let i = 0; i < str.length; i++) {
        res += Number(str[i]);
    }
    return String(res);
};
// определение типов возможно в момент деклорирования функции
function square(x) {
    return x ** 2;
}
// функция без результата, необходимо указывать тип ":void"
function privet() {
    console.log('Привет!');
}
console.log(fn1(124, 83));
// test new commit
